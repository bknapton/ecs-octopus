name: Deploy Octopus to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your repository code
      - name: Check out repository
        uses: actions/checkout@v3

      # 2) Configure AWS credentials using your GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEYID }}
          aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3) Log into Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # 4) Build and push Docker image to ECR
      - name: Build and push Docker image to ECR
        run: |
          # Use commit SHA as an image tag or "latest"
          IMAGE_TAG=latest
          ECR_URI="665040277244.dkr.ecr.us-east-1.amazonaws.com/octopus-deploy"

          docker build -t octopus-deploy .
          docker tag octopus-deploy:latest "${ECR_URI}:${IMAGE_TAG}"
          docker push "${ECR_URI}:${IMAGE_TAG}"

      # 5) Render (update) the ECS task definition
      - name: Render ECS task definition
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          # Path to your ECS task definition JSON
          task-definition: ecs-task-definition.json

          # The container name in that JSON
          container-name: octopus-container

          # The newly pushed Docker image
          image: 665040277244.dkr.ecr.us-east-1.amazonaws.com/octopus-deploy:latest

          # Here's where we set ACCEPT_EULA=Y, along with any other variables you need
          environment-variables: >
            ACCEPT_EULA=Y
            OCTOPUS_SQL_CONNECTION_STRING=octopus-db.crufshaeq0ox.us-east-1.rds.amazonaws.com
            # You can add more key=value lines here, if needed.
            # e.g. OCTOPUS_ADMIN_USERNAME=admin
            #      OCTOPUS_ADMIN_PASSWORD=SomeSecret

      # 6) Deploy the rendered (updated) task definition to ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          cluster: octopus-cluster
          service: octopus-service
          wait-for-service-stability: true
